{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Brian environment demo template",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "DBUsername": {
      "Default": "admin",
      "Description" : "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    "DBPassword" : {
      "Description" : "Password of RDS master password",
      "Type" : "String",
      "NoEcho": "true",
      "MinLength": "4"
    },
    "BrianVersion" : {
      "Default": "0.9",
      "Description" : "Version of Brian",
      "Type" : "String"
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch" : {
      "t2.micro"    : { "Arch" : "64HVM" },
      "t2.small"    : { "Arch" : "64HVM" },
      "t2.medium"   : { "Arch" : "64HVM" },
      "m3.medium"   : { "Arch" : "64HVM" },
      "m3.large"    : { "Arch" : "64HVM" },
      "m3.xlarge"   : { "Arch" : "64HVM" },
      "m3.2xlarge"  : { "Arch" : "64HVM" },
      "c3.large"    : { "Arch" : "64HVM" },
      "c3.xlarge"   : { "Arch" : "64HVM" },
      "c3.2xlarge"  : { "Arch" : "64HVM" },
      "c3.4xlarge"  : { "Arch" : "64HVM" },
      "c3.8xlarge"  : { "Arch" : "64HVM" },
      "r3.large"    : { "Arch" : "64HVM" },
      "r3.xlarge"   : { "Arch" : "64HVM" },
      "r3.2xlarge"  : { "Arch" : "64HVM" },
      "r3.4xlarge"  : { "Arch" : "64HVM" },
      "r3.8xlarge"  : { "Arch" : "64HVM" },
      "i2.xlarge"   : { "Arch" : "64HVM" },
      "i2.2xlarge"  : { "Arch" : "64HVM" },
      "i2.4xlarge"  : { "Arch" : "64HVM" },
      "i2.8xlarge"  : { "Arch" : "64HVM" },
      "hs1.8xlarge" : { "Arch" : "64HVM" },
      
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"   : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" },
      "cc2.8xlarge" : { "Arch" : "64HVM" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "cr1.8xlarge" : { "Arch" : "64HVM" },
      "hi1.4xlarge" : { "Arch" : "64HVM" },
      "t1.micro"    : { "Arch" : "64" }
    },

    "AWSRegionArch2AMI201409" : {
      "us-east-1"      : { "64" : "ami-50842d38", "64HVM" : "ami-08842d60" },
      "us-west-2"      : { "64" : "ami-af86c69f", "64HVM" : "ami-8786c6b7" },
      "us-west-1"      : { "64" : "ami-c7a8a182", "64HVM" : "ami-cfa8a18a" },
      "eu-west-1"      : { "64" : "ami-aa8f28dd", "64HVM" : "ami-748e2903" },
      "ap-southeast-1" : { "64" : "ami-20e1c572", "64HVM" : "ami-d6e1c584" },
      "ap-northeast-1" : { "64" : "ami-21072820", "64HVM" : "ami-35072834" },
      "ap-southeast-2" : { "64" : "ami-8b4724b1", "64HVM" : "ami-fd4724c7" },
      "sa-east-1"      : { "64" : "ami-9d6cc680", "64HVM" : "ami-956cc688" }
    },
    "StackConfig" : {
      "CIDR": {
        "VPC" : "10.0.0.0/16",
        "Subnet1" : "10.0.0.0/24",
        "Subnet2" : "10.0.1.0/24"
      },
      "BastionServer": { "InstanceType" : "t2.micro" },
      "BrianServer"  : { "InstanceType" : "t2.micro" },
      "DBServer"     : { "InstanceType" : "db.t2.micro", "AllocatedStorage" : "5" }
    }
  },
  "Resources": {
    "BrianRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Statement": [ {
            "Effect": "Allow",
              "Principal": {
                "Service": [ "ec2.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path" : "/",
        "Policies" :[ {
          "PolicyName" : "BrianPolicy",
          "PolicyDocument" : {
            "Statement": [
              {
                "Sid": "BrianStmt",
                "Effect": "Allow",
                "Action": "sns:Publish",
                "Resource": [
                  { "Ref" : "BrianTopic" }
                ]
              },
              {
                "Sid": "BrianMetricsStmt",
                "Effect": "Allow",
                "Action": "cloudwatch:PutMetricData",
                "Resource": "*"
              }
            ]
          }
        }]
      }
    },
    "BrianProfile" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path": "/",
        "Roles" : [ { "Ref" : "BrianRole" } ]
      }
    },

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "StackConfig", "CIDR", "VPC" ]},
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "InstanceTenancy" : "default",
        "Tags": [
          { "Key" : "Name", "Value": { "Ref" : "AWS::StackName" } }
        ]
      }
    },
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway"
    },
    "AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "InternetGatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "Subnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref": "VPC" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" }}]},
        "CidrBlock" : { "Fn::FindInMap" : [ "StackConfig", "CIDR", "Subnet1" ]},
        "Tags": [
          { "Key" : "Name", "Value": { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "subnet1" ]]} }
        ]
      }
    },
    "Subnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref": "VPC" },
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" }}]},
        "CidrBlock" : { "Fn::FindInMap" : [ "StackConfig", "CIDR", "Subnet2" ]},
        "Tags": [
          { "Key" : "Name", "Value": { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "subnet2" ]]} }
        ]
      }
    },
    "Subnet1RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Subnet1" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "Subnet2RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Subnet2" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },


    "SSHSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags": [
          { "Key" : "Name", "Value": { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "ssh" ]]} }
        ]
      }
    },


    "BastionInstanceEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": { "Ref" : "BastionInstance" }
      }
    },
    "BastionInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Fn::FindInMap" : [ "StackConfig", "BastionServer", "InstanceType" ]},
        "KeyName": { "Ref": "KeyName" },
        "SubnetId": { "Ref" : "Subnet1" },
        "ImageId": { "Fn::FindInMap" : [ "AWSRegionArch2AMI201409", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Fn::FindInMap" : [ "StackConfig", "BastionServer", "InstanceType" ]}, "Arch" ] } ] },
        "SecurityGroupIds" : [
          { "Fn::GetAtt" : [ "VPC", "DefaultSecurityGroup" ] },
          { "Ref" : "SSHSecurityGroup" }
        ],
        "Tags": [
          { "Key" : "Name", "Value": { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "bastion" ]]} }
        ]
      }
    },

    "DBParamGroup" : {
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties" : {
        "Description" : "Default parameter group for Brian",
        "Family" : "MySQL5.6",
        "Parameters" : {
          "character_set_database" : "utf8mb4",
          "character_set_client" : "utf8mb4",
          "character_set_connection" : "utf8mb4",
          "character_set_results" : "utf8mb4",
          "character_set_server" : "utf8mb4",
          "sort_buffer_size" : "2097152",
          "skip-character-set-client-handshake" : "TRUE",
          "general_log" : "1",
          "log_output" : "FILE",
          "slow_query_log" : "1",
          "long_query_time" : "1"
        }
      }
    },
    "DBSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
        "DBSubnetGroupDescription" : "Database subnets for RDS",
        "SubnetIds" : [
          { "Ref": "Subnet1" },
          { "Ref": "Subnet2" }
        ]
      }
    },
    "DBInstance" : {
      "Type" : "AWS::RDS::DBInstance",
      "DeletionPolicy" : "Snapshot",
      "Properties" : {
        "DBInstanceClass" : { "Fn::FindInMap" : [ "StackConfig", "DBServer", "InstanceType" ]},
        "AllocatedStorage" : { "Fn::FindInMap" : [ "StackConfig", "DBServer", "AllocatedStorage" ]},
        "Engine" : "MySQL",
        "MultiAZ" : "true",
        "EngineVersion" : "5.6.13",
        "MasterUsername" : { "Ref" : "DBUsername" },
        "MasterUserPassword" : { "Ref" : "DBPassword" },
        "DBName" : "brian",
        "DBParameterGroupName" : { "Ref" : "DBParamGroup" },
        "DBSubnetGroupName" : { "Ref" : "DBSubnetGroup" },
        "VPCSecurityGroups" : [
          { "Fn::GetAtt" : [ "VPC", "DefaultSecurityGroup" ] }
        ],
        "Tags": [
          { "Key" : "Name", "Value": { "Ref" : "AWS::StackName" } }
        ]
      }
    },
    
    "BrianTopic" : {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "Subscription" : [
          { "Endpoint" : { "Fn::GetAtt" : [ "WorkerQueue", "Arn" ] }, "Protocol" : "sqs" }
        ]
      }
    },
    "WorkerQueue" : {
      "Type" : "AWS::SQS::Queue"
    },
    "WorkerQueuePolicy" : {
      "Type" : "AWS::SQS::QueuePolicy",
      "Properties" : {
        "Queues" : [ { "Ref" : "WorkerQueue" } ],
        "PolicyDocument":  {
          "Version": "2008-10-17",
          "Id": "WorkerQueuePolicy-Document",
          "Statement" : [
            {
              "Sid": "Allow-SNS-SendMessage",
              "Effect": "Allow",
              "Principal" : {
                "AWS": "*"
              },
              "Action": "sqs:SendMessage",
              "Resource": { "Fn::GetAtt" : [ "WorkerQueue", "Arn" ] },
              "Condition" : {
                "ArnEquals" : {
                  "aws:SourceArn" : [ { "Ref" : "BrianTopic" } ]
                }
              }
            }
          ]
        }
      }
    },

    "BrianApplication" : {
      "Type" : "AWS::ElasticBeanstalk::Application",
      "Properties" : {
        "ApplicationName" : { "Ref" : "AWS::StackName" },
        "Description" : "brian demo application"
      }
    },
    "BrianAppVer" : {
      "Type" : "AWS::ElasticBeanstalk::ApplicationVersion",
      "DeletionPolicy" : "Retain",
      "Properties" : {
        "ApplicationName" : { "Ref" : "BrianApplication" },
        "Description" : { "Fn::Join" :[ "-", [ "brian", { "Ref" : "BrianVersion" } ]]},
        "SourceBundle" : {
          "S3Bucket" : "cm-public-eb-applications",
          "S3Key" : { "Fn::Join" :[ "", [ "brian/brian-", { "Ref" : "BrianVersion" }, ".war" ]]}
        }
      }
    },
    "BrianConfig" : {
      "Type" : "AWS::ElasticBeanstalk::ConfigurationTemplate",
      "Properties" : {
        "ApplicationName" : { "Ref" : "BrianApplication" },
        "Description" : "brian configuration template",
        "SolutionStackName" : "64bit Amazon Linux 2014.09 v1.0.0 running Tomcat 8 Java 8",
        "OptionSettings" : [
          { "Namespace" : "aws:ec2:vpc", "OptionName" : "VPCId", "Value" : { "Ref" : "VPC" } },
          { "Namespace" : "aws:ec2:vpc", "OptionName" : "Subnets", "Value" : { "Fn::Join" :[ ",", [
            { "Ref" : "Subnet1" },
            { "Ref" : "Subnet2" }
          ]]}},
          { "Namespace" : "aws:ec2:vpc", "OptionName" : "ELBSubnets", "Value" : { "Fn::Join" :[ ",", [
            { "Ref" : "Subnet1" },
            { "Ref" : "Subnet2" }
          ]]}},
          { "Namespace" : "aws:ec2:vpc", "OptionName" : "ELBScheme", "Value" : "internal" },
          { "Namespace" : "aws:ec2:vpc", "OptionName" : "AssociatePublicIpAddress", "Value" : "true" },
          
          { "Namespace" : "aws:autoscaling:launchconfiguration", "OptionName" : "InstanceType", "Value" : { "Fn::FindInMap" : [ "StackConfig", "BrianServer", "InstanceType" ]}},
          { "Namespace" : "aws:autoscaling:launchconfiguration", "OptionName" : "EC2KeyName",   "Value" : { "Ref" : "KeyName" }},
          { "Namespace" : "aws:autoscaling:launchconfiguration", "OptionName" : "SecurityGroups", "Value" : { "Fn::GetAtt" : [ "VPC", "DefaultSecurityGroup" ] }},
          { "Namespace" : "aws:autoscaling:launchconfiguration", "OptionName" : "IamInstanceProfile", "Value" : { "Ref" : "BrianProfile" }},
          { "Namespace" : "aws:autoscaling:launchconfiguration", "OptionName" : "SSHSourceRestriction", "Value" : { "Fn::Join" : [ "", ["tcp,22,22,", { "Fn::FindInMap" : [ "StackConfig", "CIDR", "VPC" ]}]]}},
          
          { "Namespace" : "aws:autoscaling:asg", "OptionName" : "MinSize", "Value" : "1" },
          { "Namespace" : "aws:autoscaling:asg", "OptionName" : "MaxSize", "Value" : "4" },
          
          { "Namespace" : "aws:elasticbeanstalk:application", "OptionName" : "Application Healthcheck URL", "Value" : "/healthcheck" },
          
          { "Namespace" : "aws:elasticbeanstalk:application:environment", "OptionName" : "JDBC_CONNECTION_STRING", "Value" : { "Fn::Join" : [ "", [
            "jdbc:mysql://",
            { "Fn::GetAtt": [ "DBInstance", "Endpoint.Address" ] }, ":",
            { "Fn::GetAtt": [ "DBInstance", "Endpoint.Port" ] }, "/brian"
          ]]}},
          { "Namespace" : "aws:elasticbeanstalk:application:environment", "OptionName" : "DB_USERNAME", "Value" : { "Ref" : "DBUsername" } },
          { "Namespace" : "aws:elasticbeanstalk:application:environment", "OptionName" : "DB_PASSWORD", "Value" : { "Ref" : "DBPassword" } },
          { "Namespace" : "aws:elasticbeanstalk:application:environment", "OptionName" : "BRIAN_TOPIC_ARN", "Value" : { "Ref" : "BrianTopic" } }
        ]
      }
    },
    "BrianEnvironment" : {
      "Type" : "AWS::ElasticBeanstalk::Environment",
      "Properties" : {
        "ApplicationName" : { "Ref" : "BrianApplication" },
        "Description" : "Brian environment.",
        "EnvironmentName" : { "Ref" : "AWS::StackName" },
        "TemplateName" : { "Ref" : "BrianConfig" },
        "VersionLabel" : { "Ref" : "BrianAppVer" }
      }
    }
  }
}
